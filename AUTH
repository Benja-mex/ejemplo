package com.normich.recepcion.firebase.models

import android.content.Intent
import android.net.Uri
import android.util.Log
import android.widget.Toast
import androidx.appcompat.app.AppCompatActivity
import com.google.firebase.auth.FirebaseAuth
import com.google.firebase.firestore.DocumentReference
import com.google.firebase.firestore.ktx.firestore
import com.google.firebase.ktx.Firebase
import com.google.firebase.storage.FirebaseStorage
import com.normich.recepcion.databinding.ActivityRegistroUserBinding
import com.normich.recepcion.ui.Menu
import com.normich.recepcion.ui.RegistroUser
import com.normich.recepcion.ui.SplashScreen

object AUTH {
    class User(val auth: FirebaseAuth = FirebaseAuth.getInstance()) {


        private var db = Firebase.firestore
        private var error_login = ""
        var authSucess = false
        val storageRef = FirebaseStorage.getInstance().reference.child(CARP_PHOTO_USER)


        fun sucessLogin(auth: Boolean) {
            authSucess = auth
        }


        fun verificarAuth(): Boolean {
            return auth.currentUser != null
        }

        fun documentReferenceUser(): DocumentReference {
            return db.collection(COLLECTION_USER)
                .document(auth.currentUser!!.uid)
        }

        fun userRegistrer(compatActivity: AppCompatActivity) {

            documentReferenceUser().get().addOnSuccessListener { document ->
                documentReferenceUser()
                if (!document.data.isNullOrEmpty()) {
                    val intent = Intent(compatActivity, Menu::class.java)
                    compatActivity.startActivity(intent)
                    compatActivity.finish()
                } else {
                    val intent = Intent(compatActivity, RegistroUser::class.java)
                    compatActivity.startActivity(intent)
                    compatActivity.finish()
                }
            }
                .addOnFailureListener { exception ->
                    Log.d("UID", "get failed with ", exception)
                }
        }

        fun registrerUser(
            photo: Uri?,
            user: UserFirebase,
            compatActivity: AppCompatActivity,
            binding: ActivityRegistroUserBinding
        ){
            photo?.let { uri ->
                val photoRef = storageRef.child(auth.currentUser!!.uid)
                photoRef.putFile(uri)
                    .addOnProgressListener {
                        val progress = (100 * it.bytesTransferred / it.totalByteCount).toInt()
                        it.run {
                            with(binding.content) {
                                progressBar.progress = progress
                                tvProgress.text = String.format("%s%%", progress)
                            }
                        }
                    }
                    .addOnSuccessListener {
                        it.storage.downloadUrl.addOnSuccessListener { downloadUrl ->
                            user.photoUrl = downloadUrl.toString()
                            documentReferenceUser()
                                .set(user)
                                .addOnSuccessListener {

                                    Toast.makeText(
                                        compatActivity,
                                        "Usuario agregado.",
                                        Toast.LENGTH_SHORT
                                    ).show()
                                    val intent = Intent(compatActivity, SplashScreen::class.java)
                                    compatActivity.startActivity(intent)
                                    compatActivity.finish()
                                }
                                .addOnFailureListener {
                                    Toast.makeText(
                                        compatActivity,
                                        "Error al agregar al Usuario.",
                                        Toast.LENGTH_SHORT
                                    ).show()
                                }
                        }


                    }
            }

        }






    fun login(email: String, password: String, compatActivity: AppCompatActivity) {

        auth.signInWithEmailAndPassword(email.trim(), password.trim())
            .addOnCompleteListener(compatActivity) { task ->
                if (task.isSuccessful) {
                    val intent = Intent(compatActivity, SplashScreen::class.java)
                    compatActivity.startActivity(intent)
                    compatActivity.finish()
                } else {
                    sucessLogin(false)
                    Log.i("auth", "task else $authSucess")
                    error_login = task.exception.toString()
                }
            }
        Log.i("auth", "task finish $authSucess")
    }

    fun cerrasession() {
        auth.signOut()
    }


    companion object {
        const val COLLECTION_USER = "users"
        const val CARP_PHOTO_USER = "user_images"
    }
}
}
